遇到的问题：
1，配置了filter过滤器之后，已经初始化了，但是没有起作用
分析，那只能是拦截的url有问题
之前配置了/、/* 都不起作用，最后配置了*，能够拦截到了

2.无法引入js文件和html文件的问题
	原因是没有在springmvc的xml配置文件中做映射
	在配置文件中添加如下映射
	<mvc:resources location="/" mapping="/**" />
3.StringBuilder和StringBuffer的线程安全问题
StringBuffer是线程安全的，StringBuider是线程安全的。
至于为什么是线程安全的，看看源码是最好不过的了。
StringBuffer创建过程。
首先调用父类的构造方法，new了一个16长度的char[]的空数组。
我们调用它的append方法
可以发现这个append方法它是一个同步方法。加了synchronized

spring springMVC整合
1,引入spring的jar包
2,web.xml监听器初始化spring容器
添加监听器：
<!-- spring 监听器，监听启动 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 指定spring的配置文件，加载到classpath下 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring.xml</param-value>
	</context-param>
	
	然后就是spring的配置文件的配置，配置自动扫描注解：
	 <!-- 配置扫描注解的包 -->
    <context:component-scan base-package="com.wgz.bill"></context:component-scan>
 	
 	在类上，加上注解：
 	dao层加
 	@Component("testDao")
 	servic成的注解为
 	

1.在web.xml中配置好Spring相关Listener/Filter/Servlet，并指明Spring和Spring Mvc的配置文件，当然，也可以不指定，放在classpath下就行，严谨一点还是写出来为好。
2.配置applicationContext.xml，这个是给Spring用的，名字随意，只要在web.xml指定就行。
3.配置 spring-servlet.xml，这个是给Spring Mvc用的，名字随意，只要在web.xml指定就行

文件解析

